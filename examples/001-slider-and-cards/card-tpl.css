@import url('https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css');

/* HTML Templates stored in CSS variables */
:root {
    /* Card template with placeholders for dynamic content - using Bootstrap utility classes */
    --template-card: '<div class="card position-relative mb-3 transition" data-card-id="{{id}}" data-color="{{color}}" data-exists="true"><div class="card-body"><div class="d-flex justify-content-between align-items-center"><h5 class="card-title">Card #{{id}}</h5><div class="d-flex gap-2"><button class="btn btn-{{color}} btn-color-action" data-action="change-color" data-card-id="{{id}}">Random Color</button><button class="btn btn-outline-secondary" data-action="delete-card" data-card-id="{{id}}">X</button></div></div></div><span class="position-absolute top-0 end-0 translate-middle badge rounded-pill bg-primary">{{id}}</span></div>';
}

/* Custom transitions */
.transition {
    transition: all 0.3s ease;
}

/* Card hover effect */
.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

/* Font size control using CSS variables */
.card-title, 
.card-body,
.card .btn {
    font-size: var(--card-font-size, 16px);
    transition: font-size 0.3s ease;
}

/* Theme support */
body[data-theme="dark"] {
    background-color: #343a40;
    color: white;
}

body[data-theme="dark"] .master-controls { 
    background-color: #212529; 
}

/* CSS-driven card styling based on data attributes */
.card[data-color="primary"] { background-color: var(--bs-primary); color: white; }
.card[data-color="secondary"] { background-color: var(--bs-secondary); color: white; }
.card[data-color="success"] { background-color: var(--bs-success); color: white; }
.card[data-color="danger"] { background-color: var(--bs-danger); color: white; }
.card[data-color="warning"] { background-color: var(--bs-warning); color: black; }
.card[data-color="info"] { background-color: var(--bs-info); color: black; }
.card[data-color="dark"] { background-color: var(--bs-dark); color: white; }

/* Button hover effect */
.btn:hover {
    opacity: 0.9;
}

/* Empty state message visibility based on card count */
body[data-card-count="0"] .empty-state-message {
    display: block;
}

body:not([data-card-count="0"]) .empty-state-message {
    display: none;
}
